#! /bin/bash
# mys - A tiny cli tool to rapidly create, import and drop local MySQL databases.
# -----
# if this is your first time here, please run `mys -h` for more info.

version=0.1.4

main() {
    CFG=~/.config/mys.conf
    args=("$@")
    if [ $# -eq 0 ]
    then
        if configexists
            then
                printf '\e[1;32mPlease see -h (--help) for usage.\e[0m\n'
                exit 0
            else
                create_config
        fi
    fi

    case ${args[0]} in
        -h | --help)
            usage
            exit 0
        ;;
        -v | --version)
            printf "mys $version \n"
            exit 0
        ;;
        --config)
            if configexists
                then
                    printf -- "\e[34mThe mys config is located at $CFG\n"
                    printf -- "\e[34mIf you wish to reset your config - please run 'mys --reset'\n"
                    exit 0
                else
                    printf -- "\e[91mNo config file found, lets make one!\n"
                    create_config
            fi
            exit 0
        ;;
        --reset)
            resetconfig
            exit 0;
        ;;
        "mkdb")
            printf -- "\e[1;32mCreating a fresh db with name: \e[42;90m ${args[1]} \e[0m\n"
            mkdb ${args[1]}
        ;;
        "ddb")
            printf -- "\e[1;32mDropping ${args[1]}\e[0m\n"
            ddb ${args[1]}
        ;;
        "cpdb")
            printf -- "\e[1;32mCopying ${args[1]} into ${args[2]}\e[0m\n"
            cpdb ${args[1]} ${args[2]}
        ;;
        *)
            printf -- "\e[91mSorry, mys doesn't recognise the given command: (${args[0]})\n"
            printf -- "\e[1;32mPlease run 'mys -h' for a list of commands\n"
        ;;
    esac
}

# functions
initconfig() {
    if ! configexists; then
        printf -- "\e[91mNo config file found, lets make one!\n"
        create_config
    fi

    . ~/.config/mys.conf
}

mkdb() {
    initconfig

    db=$1

    mysql -u ${MYS_NAME} --password=${MYS_PASS} -e "create database ${db};" > mys.log 2>&1

    if [ $? -eq 0 ]; then
        printf -- "\e[32mSuccessfully created ${db}!\e[39m\n"
    else
        printf -- "\e[31mOops! Something wasn't right, please check the mys.log\e[39m"
    fi
}

ddb() {
    initconfig

    db=$1

    mysql -u ${MYS_NAME} --password=${MYS_PASS} -e "drop database ${db};" > mys.log 2>&1

    if [ $? -eq 0 ]; then
        printf -- "\e[32mSuccessfully dropped ${db}!\e[39m\n"
    else
        printf -- "\e[31mOops! Something wasn't right, please check the mys.log\e[39m"
    fi
}

cpdb() {
    initconfig

    file=$1
    db=$2

    mysql -u ${MYS_NAME} --password=${MYS_PASS} ${db} < ${file} > mys.log 2>&1

    if [ $? -eq 0 ]; then
        printf -- "\e[32mSuccessfully copied ${file} into ${db}!\e[39m\n"
    else
        printf -- "\e[31mOops! Something wasn't right, please check the mys.log\e[39m"
    fi
}

# endfunction

# Check if a config file exists
configexists() {
    if [ ! -e ~/.config/mys.conf ]
    then
        return 1
    fi
    return 0
}

# Create configuration file
create_config () {
    printf -- "\e[34m⚡ Creating a mys.conf file ⚡\e[39m\n"

    touch ~/.config/mys.conf
    read -p 'MySQL username: ' mys_name
    read -sp 'MySQL password: ' mys_pass

    echo "MYS_NAME="$mys_name >> $CFG
    echo "MYS_PASS="$mys_pass >> $CFG

    . ~/.config/mys.conf
    printf -- "\nConfig file successfully created at '~/.config/mys.conf'\n"
}

resetconfig() {
    if configexists
        then
            rm -rf ~/.config/mys.conf
            create_config
    fi
}

usage() {
    printf "\e[34mmys\e[39m\n"
    printf "\e[34m[usage]\n\e[39m"
    printf "    mys <command> [paramater]\n\n"
    printf "\e[34m[commands]\n\e[39m"
    printf "    \e[33m-v, --version\e[39m                   Display current version of mys\n"
    printf "    \e[33m-h, --help\e[39m                      Display the help screen\n"
    printf "    \e[33m--config\e[39m                        Generate a config file if one doesn't exist'\n"
    printf "    \e[33m--reset\e[39m                         Reset the mys config file and prompt for new details\n"
    printf "    \e[33mkdb [db_name]\e[39m                   Create a new database using the given parameter as the db name\n"
    printf "    \e[33mddb [db_name]\e[39m                   Drop a database using the given parameter as the target db\n"
    printf "    \e[33mcpdb [sql_file] [db_name]\e[39m       Copy a .sql file, (1st paramater), into a the target db (2nd parameter)\n"
    exit 0
}

main "$@"; exit